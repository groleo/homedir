#! /bin/bash

setup_editor()
{
    export EDITOR=/usr/bin/vimx
    export VISUAL=/usr/bin/vimx
}
setup_locales()
{
    export LANG="en_US.utf8"
    export LANGUAGE="en_US.utf8"
    export LC_CTYPE="en_US.utf8"
    export LC_NUMERIC="en_US.utf8"
    export LC_TIME="en_US.utf8"
    export LC_COLLATE="en_US.utf8"
    export LC_MONETARY="en_US.utf8"
    export LC_MESSAGES="en_US.utf8"
    export LC_PAPER="en_US.utf8"
    export LC_NAME="en_US.utf8"
    export LC_ADDRESS="en_US.utf8"
    export LC_TELEPHONE="en_US.utf8"
    export LC_MEASUREMENT="en_US.utf8"
    export LC_IDENTIFICATION="en_US.utf8"
    #export LC_ALL=en_US.UTF-8
}
export_path() {
    EXTRA_PATH=/usr/share/ant/bin
    #EXTRA_PATH=${EXTRA_PATH}:${HOME}/workspace/HorseTooth/scripts/tools/build/bin
    EXTRA_PATH=${EXTRA_PATH}:${HOME}/workspace/chromium/depot_tools:${HOME}/.local/bin:/opt/java/jdk1.7.0_79/bin
    EXTRA_PATH=${EXTRA_PATH}:${HOME}/.local/opt/p4v-2015.1.1233444/bin/
    EXTRA_PATH=${EXTRA_PATH}:/opt/intel/vtune_amplifier_for_systems/bin64/
    export PATH=${PATH##$EXTRA_PATH}
    export PATH=${EXTRA_PATH}:.:${PATH}
}
aliases()
{
    alias grep="grep --color=auto --exclude='*.orig' --exclude='tags' --exclude-dir='.hg' --exclude-dir='.git' --exclude-dir='out'"
    alias psg="ps -augxww | grep -v grep | grep -i"
    alias cd-="cd -"
    alias l1='ls -1'
    alias tmux='tmux -2 -u'
    alias f=fg
    alias vi=vimx
    alias ls='ls --color'
}

Cgrep()
{
    find . -iname '*.c' -o -iname '*.h' -o -iname '*.hpp' -o -iname '*.cpp' | xargs grep -n --color=always --exclude='*.orig' --exclude='tags' --exclude-dir='.hg' --exclude-dir='.git' --exclude-dir='out' $*
}
setup_proxy()
{
    _mirror=jf
    export http_proxy=http://proxy.${_mirror}.intel.com:911
    export HTTP_PROXY=$http_proxy
    export https_proxy=https://proxy.${_mirror}.intel.com:912
    export HTTPS_PROXY=$https_proxy
    export ftp_proxy=ftp://proxy.${_mirror}.intel.com:911
    export FTP_PROXY=$ftp_proxy
    export no_proxy=localhost,.intel.com,10.0.0.0/8
    export NO_PROXY=$no_proxy
    export all_proxy=socks://proxy.${_mirror}.intel.com:1080
    export ALL_PROXY=$all_proxy
    export GIT_PROXY_COMMAND=${HOME}/.local/bin/socks-gw
}
setup_perforce()
{
    export P4DIFF=diff
    export P4USER=amnegrea
    export P4CLIENT=amnegrea_amnegrea-git
    export P4PORT=ssl:p4proxy11.devtools.intel.com:2210
}
setup_display()
{
    #localhost:10.0
    export DISPLAY=:0
}
setup_android()
{
    export LFSTK_BIN=/opt/lfstk.1.8.6/bin/lfstk
    export LFSTK_KEY_DIR=${HOME}/local/fstk-keys
    export CLASSPATH=.
    export JAVA_FONTS=/usr/share/fonts/truetype
    export JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64/
    export ANT_HOME=/usr/share/ant
}
cmm()
{
	mm 2>&1 $* \
	| ack --flush --passthru --color --color-match=red "^.*: error.*" \
	| ack --flush --passthru --color --color-match=red "^.*: fatal error.*" \
	| ack --flush --passthru --color --color-match=yellow "^.*: warning:.*" \
	| ack --flush --passthru --color --color-match=red ".*undefined reference to*" \
	| ack --flush --passthru --color --color-match=red ".*No rule to make target.*" \
	| ack --flush --passthru --color --color-match=red ".*multiple definition of.*" | tee /tmp/log
	RV=${PIPESTATUS[0]}

	grep "Install:" /tmp/log > /tmp/install
	sed -e 's/Install:/c push/' -i /tmp/install
	mv /tmp/install .
	chmod +x install
	rm /tmp/log
	return $RV
}

#
#  Utilitary functions
#
col()
{
	$* \
	| ack --flush --passthru --color --color-match=red "^.*: error.*" \
	| ack --flush --passthru --color --color-match=red "^.*: fatal error.*" \
	| ack --flush --passthru --color --color-match=yellow "^.*: warning:.*" \
	| ack --flush --passthru --color --color-match=red ".*undefined reference to*" \
	| ack --flush --passthru --color --color-match=red ".*No rule to make target.*" \
	| ack --flush --passthru --color --color-match=red ".*multiple definition of.*" | tee /tmp/log
	return ${PIPESTATUS[0]}
}
shgrep()
{
	local d=${2:-.}
	find $d -type f \( -name CMakeLists.txt -o -name "Kconfig" -o -name '*.sh' -o -name '*.mk' -o -iname 'makefile*' -a ! -name '*.orig' \) -print0 | xargs -0 grep --color -n "$@"
}
mkgrep()
{
	find . -type f \( -name 'Android*.mk' -a ! -name '*.orig' \) -print0 | xargs -0 grep --color -n "$@"
}
hgrep ()
{
	find . -name .repo -prune -o -name .git -prune -o -type f \(  -name '*.h' \) -print0 | xargs -0 grep --color -n "$@"
}
EXT_COLOR()
{
    echo -ne "\[\033[38;5;$1m\]";
}


#setterm -blength 0
#export ADBHOST=10.237.104.13
#XDG_CONFIG_DIRS="/etc/xdg:$HOME/.local/etc/xdg"
#XDG_DATA_DIRS="$HOME/.local/share:/usr/share:/usr/local/share"
#alias tar='tar --use-compress-program=pigz'

HISTCONTROL="ignoredups:erasedups:ignorespace"
HISTSIZE=1048576
HISTFILESIZE=1048576
LAST_HISTORY_WRITE=$SECONDS

prompt_command() {
#	if [ $(($SECONDS - $LAST_HISTORY_WRITE)) -gt 60 ]; then
		history -a && history -c && history -r
#		LAST_HISTORY_WRITE=$SECONDS
#	fi
}

PROMPT_COMMAND="prompt_command"
export HISTCONTROL HISTSIZE HISTFILESIZE PROMPT_COMMAND
shopt -s histappend

export GIT_PS1_SHOWDIRTYSTATE=1
export GIT_PS1_SHOWSTASHSTATE=1
export GIT_PS1_SHOWUNTRACKEDFILES=1

[[ -s /etc/profile.d/autojump.sh ]] && source /etc/profile.d/autojump.sh
[[ -s /usr/share/autojump/autojump.bash ]] && source /usr/share/autojump/autojump.bash

_extra_git='X'
#Debian
if [ -f /etc/bash_completion.d/git-prompt ] ; then
    source /etc/bash_completion.d/git-prompt
    _extra_git='[$(__git_ps1 "%s")]'
fi
if [ -f /etc/bash_completion.d/git ]; then
    source /etc/bash_completion.d/git
    _extra_git='[$(__git_ps1 "%s")]'
fi

# Fedora
if [ -f /usr/share/git-core/contrib/completion/git-prompt.sh ]; then
    source /usr/share/git-core/contrib/completion/git-prompt.sh
    _extra_git='[$(__git_ps1 "%s")]'
fi

__android_extra() {
    if [ "$ANDROID_PRODUCT_OUT" != "" ]; then
        echo -n "[$(basename $ANDROID_PRODUCT_OUT)]"
    fi
}


separator="-------------------------------------------------------------------------------"
#export PS1='\j--'${OLDPWD}${separator}'\n\[\033[01;32m\]\u@\h\[\033[01;31m\]'$_extra_git'$(__android_extra)\[\033[01;33m\]\W \$ \e[0m'
export PS1='\j----\[\033[01;33m\]'"${separator}"'\n\[\033[01;32m\]\u@\h\[\033[01;31m\]'$_extra_git'$(__android_extra)\[\033[01;33m\]\W \$ '
[ -n "$SCHROOT_CHROOT_NAME" ] && export PS1="${PS1}+ "
#http://linux-sxs.org/housekeeping/lscolors.html
#export LS_COLORS='di=01;96:fi=0:ln=31:pi=5:so=5:bd=5:cd=5:or=31:mi=0:ex=35:*.rpm=90'
#export LS_COLORS="di=01;37"
LS_COLORS="no=0;93:rs=0:di=01;37:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lz=01;31:*.xz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.axv=01;35:*.anx=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.axa=00;36:*.oga=00;36:*.spx=00;36:*.xspf=00;36:"

case "$-" in
    *i*)
    bind -x '"\eOP":" fg"'
    set bell-style none
esac

export TERMINFO=${HOME}/.local/terminfo

#use ctl keys to move forward and back in words
bind '"\eOC":forward-word'
bind '"\eOD":backward-word'
#bind '"\e\e[C": forward-word'
#bind '"\e\e[D": backward-word'
#bind '"\e[D":backward-word'
# mappings for Ctrl-left-arrow and Ctrl-right-arrow for word moving
#"\e[1;5C": forward-word
#"\e[1;5D": backward-word

#"\e[5C": forward-word
#"\e[5D": backward-word


export CCACHE_CPP2=yes
export CCACHE_SLOPPINESS="time_macros,include_file_mtime,file_macro"
ccache -M 30G > /dev/null

setup_editor
setup_locales
export_path
aliases
#setup_proxy
setup_perforce
setup_display

_workjump() {
        local cur
        cur=workspace/${COMP_WORDS[*]:1}
        comps=$(autojump --complete $cur)
        while read i; do
            COMPREPLY=("${COMPREPLY[@]}" "${i}")
        done <<EOF
        $comps
EOF
}
work() {
    j $*
}
complete -F _workjump work
